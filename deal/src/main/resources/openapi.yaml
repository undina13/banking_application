openapi: 3.0.1
info:
  title: Conveyor
  description: Conveyor application
  contact:
    name: undina
    email: foxundina@gmail.com
  version: 1.0.0
servers:
  - url: http://localhost:8081
    description: Generated server url
tags:
  - name: DealController
    description: Контроллер DealController
paths:
  /deal/offer:
    put:
      tags:
        - DealController
      operationId: applyLoanOffer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanOfferDTO'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /deal/calculate/{applicationId}:
    put:
      tags:
        - DealController
      summary: Завершение регистрации + полный подсчёт кредита
      operationId: getCalculation
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FinishRegistrationRequestDTO'
        required: true
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Отказано в кредите
          content: {}
  /deal/application:
    post:
      tags:
        - DealController
      summary: Создание application и client, получение 4 кредитных предложений
      operationId: createApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoanApplicationRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LoanOfferDTO'
        '400':
          description: Ошибка валидации
          content: {}
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
    LoanOfferDTO:
      type: object
      properties:
        applicationId:
          type: integer
          format: int64
        requestedAmount:
          type: number
        totalAmount:
          type: number
        term:
          type: integer
          format: int32
        monthlyPayment:
          type: number
        rate:
          type: number
        isInsuranceEnabled:
          type: boolean
        isSalaryClient:
          type: boolean
    EmploymentDTO:
      required:
        - employerINN
        - employmentStatus
        - position
        - salary
        - workExperienceCurrent
        - workExperienceTotal
      type: object
      properties:
        employmentStatus:
          type: string
          enum:
            - UNEMPLOYED
            - SELF_EMPLOYED
            - BUSINESS_OWNER
            - EMPLOYEE
        employerINN:
          type: string
        salary:
          type: number
        position:
          type: string
          enum:
            - MIDDLE_MANAGER
            - TOP_MANAGER
            - MANAGER
        workExperienceTotal:
          type: integer
          format: int32
        workExperienceCurrent:
          type: integer
          format: int32
    FinishRegistrationRequestDTO:
      type: object
      properties:
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - NON_BINARY
        maritalStatus:
          type: string
          enum:
            - MARRIED
            - DIVORCED
            - NOT_MARRIED
        dependentAmount:
          type: integer
          format: int32
        passportIssueDate:
          type: string
          format: date
        passportIssueBranch:
          type: string
        employment:
          $ref: '#/components/schemas/EmploymentDTO'
        account:
          type: string
    LoanApplicationRequestDTO:
      required:
        - amount
        - birthdate
        - email
        - firstName
        - lastName
        - passportNumber
        - passportSeries
        - term
      type: object
      properties:
        amount:
          minimum: 10000
          type: number
        term:
          minimum: 6
          type: integer
          format: int32
        firstName:
          pattern: ^[a-zA-Z]{2,30}$
          type: string
        lastName:
          pattern: ^[a-zA-Z]{2,30}$
          type: string
        middleName:
          pattern: ^[a-zA-Z]{2,30}$
          type: string
        email:
          pattern: ^[\w\.]{2,50}@[\w\.]{2,20}$
          type: string
        birthdate:
          type: string
          format: date
        passportSeries:
          pattern: ^[0-9]{4}$
          type: string
        passportNumber:
          pattern: ^[0-9]{6}$
          type: string
